<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Error_AWBNameofdeliveryperson" xml:space="preserve">
    <value>AWB/ Name of delivery person is Required.</value>
  </data>
  <data name="Error_BUName" xml:space="preserve">
    <value>Please Select Business Unit</value>
  </data>
  <data name="Error_CourierNameHandDelivery" xml:space="preserve">
    <value>Please Select Courier Name/Hand Delivery </value>
  </data>
  <data name="Error_Location" xml:space="preserve">
    <value> Location is Required</value>
  </data>
  <data name="Error_MaterialCategory" xml:space="preserve">
    <value>Please Select Material Category</value>
  </data>
  <data name="Error_MaterialHandedoverto" xml:space="preserve">
    <value>Please Select Material Handed over to</value>
  </data>
  <data name="Error_MaterialLocation" xml:space="preserve">
    <value>Please Select Material Location</value>
  </data>
  <data name="Error_NameofDeliver" xml:space="preserve">
    <value>Please Enter Name of Deliver</value>
  </data>
  <data name="Error_NewInward" xml:space="preserve">
    <value>Please Select an Inward</value>
  </data>
  <data name="Error_Particulars" xml:space="preserve">
    <value>Recipient 1 Particulars is Required</value>
  </data>
  <data name="Error_ProductCategory" xml:space="preserve">
    <value>Please Select Product Category</value>
  </data>
  <data name="Error_ProjectName" xml:space="preserve">
    <value>Please Select Project Name</value>
  </data>
  <data name="Error_Recipient1Attachment" xml:space="preserve">
    <value>Please attach a file</value>
  </data>
  <data name="Error_Recipient2Attachment" xml:space="preserve">
    <value>Please Attach File</value>
  </data>
  <data name="Error_Recipient2Particulars" xml:space="preserve">
    <value>Recipient 2 Particulars is Required</value>
  </data>
  <data name="Error_SenderName" xml:space="preserve">
    <value>Sender Name is Required</value>
  </data>
  <data name="Error_TypeofMaterial" xml:space="preserve">
    <value>Please Select Type of Material</value>
  </data>
  <data name="Grid_Title_PerformedBy" xml:space="preserve">
    <value>Inward Details Entered By</value>
  </data>
  <data name="Label_AWBNameofdeliveryperson" xml:space="preserve">
    <value>AWB/ Name of delivery person</value>
  </data>
  <data name="Label_AWDNo" xml:space="preserve">
    <value>AWB/ Name of delivery person :</value>
  </data>
  <data name="Label_BUName" xml:space="preserve">
    <value>Business Unit:</value>
  </data>
  <data name="Label_CourierName" xml:space="preserve">
    <value>Courier Name/Hand Delivery :</value>
  </data>
  <data name="Label_CourierNameHandDelivery" xml:space="preserve">
    <value>Courier Name/Hand Delivery</value>
  </data>
  <data name="Label_InwardDate" xml:space="preserve">
    <value>Inward Date:</value>
  </data>
  <data name="Label_InwardID" xml:space="preserve">
    <value>Inward ID :</value>
  </data>
  <data name="Label_Location" xml:space="preserve">
    <value>Location:</value>
  </data>
  <data name="Label_MaterialCategory" xml:space="preserve">
    <value>Material Catecory :</value>
  </data>
  <data name="Label_MaterialHandedoverto" xml:space="preserve">
    <value>Material Handed Over to:</value>
  </data>
  <data name="Label_MaterialLocation" xml:space="preserve">
    <value>Material Location :</value>
  </data>
  <data name="Label_NameofDeliver" xml:space="preserve">
    <value>AWB/ Name of delivery person :</value>
  </data>
  <data name="Label_NewInward" xml:space="preserve">
    <value>Select Inward Type</value>
  </data>
  <data name="Label_NextApproverAlias" xml:space="preserve">
    <value>Pending with :</value>
  </data>
  <data name="Label_OutwardId" xml:space="preserve">
    <value>Outward Id :</value>
  </data>
  <data name="Label_Particulars" xml:space="preserve">
    <value>Recipient 1 Particulars:</value>
  </data>
  <data name="Label_ProductCategory" xml:space="preserve">
    <value>Product Category:</value>
  </data>
  <data name="Label_ProjectName" xml:space="preserve">
    <value>Project Name:</value>
  </data>
  <data name="Label_ProposedBy" xml:space="preserve">
    <value>Inward Details Entered By :</value>
  </data>
  <data name="Label_ProposedByAlise" xml:space="preserve">
    <value>Inward Details Entered By :</value>
  </data>
  <data name="Label_Recipient1Attachment" xml:space="preserve">
    <value>Attachment:</value>
  </data>
  <data name="Label_Recipient2Alise" xml:space="preserve">
    <value>Recipient 2:</value>
  </data>
  <data name="Label_Recipient2Attachment" xml:space="preserve">
    <value>Attachment:</value>
  </data>
  <data name="Label_Recipient2Particulars" xml:space="preserve">
    <value>Recipient 2 Particulars :</value>
  </data>
  <data name="Label_RequestDate" xml:space="preserve">
    <value>Inward Date :</value>
  </data>
  <data name="Label_SenderName" xml:space="preserve">
    <value>Sender’s Name : </value>
  </data>
  <data name="Label_SerialNo" xml:space="preserve">
    <value>Serial No:</value>
  </data>
  <data name="Label_Status" xml:space="preserve">
    <value>Status:</value>
  </data>
  <data name="Label_TypeofMaterial" xml:space="preserve">
    <value>Type of Material:</value>
  </data>
  <data name="Section_Title_RECIPIENT1" xml:space="preserve">
    <value>Recipient 1</value>
  </data>
  <data name="Section_Title_RECIPIENT2" xml:space="preserve">
    <value>Recipient 2</value>
  </data>
  <data name="Text_CompleteSuccess" xml:space="preserve">
    <value>Inward Request Completed Successfully.&lt;br/&gt;&lt;br/&gt;&lt;b&gt;
If you want to print serial number please click on top of the form's print button.&lt;/b&gt;</value>
  </data>
  <data name="Text_Error" xml:space="preserve">
    <value>Something went Wrong</value>
  </data>
  <data name="Text_SaveDraftSuccess" xml:space="preserve">
    <value>Inward Request save as draft successfully</value>
  </data>
  <data name="Text_SaveSuccess" xml:space="preserve">
    <value>Inward Request saved as draft successfully</value>
  </data>
  <data name="Text_Success" xml:space="preserve">
    <value>Inward Request is saved successfully.</value>
  </data>
</root>