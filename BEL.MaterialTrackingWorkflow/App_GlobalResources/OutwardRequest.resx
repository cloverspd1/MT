<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Label_Action" xml:space="preserve">
    <value>Action :</value>
  </data>
  <data name="Label_AWDNo" xml:space="preserve">
    <value>AWB/ Name of delivery person :</value>
  </data>
  <data name="Label_Comment" xml:space="preserve">
    <value>Comment :</value>
  </data>
  <data name="Label_CourierDetails" xml:space="preserve">
    <value>Courier Details :</value>
  </data>
  <data name="Label_LoctionAddress" xml:space="preserve">
    <value>Loction/Address :</value>
  </data>
  <data name="Label_OutwardDate" xml:space="preserve">
    <value>Outward Date :</value>
  </data>
  <data name="Label_OutwardId" xml:space="preserve">
    <value>Outward Id :</value>
  </data>
  <data name="Label_Particulars" xml:space="preserve">
    <value>Recipient 1 Particulars :</value>
  </data>
  <data name="Label_RecipientAttachment" xml:space="preserve">
    <value>Recipient Attachment :</value>
  </data>
  <data name="Label_RecipientName" xml:space="preserve">
    <value>Recipient Name :</value>
  </data>
  <data name="Label_RequestType" xml:space="preserve">
    <value>Request Type :</value>
  </data>
  <data name="Label_TypeofMaterial" xml:space="preserve">
    <value>Type of Material :</value>
  </data>
  <data name="Section_Title_HOD" xml:space="preserve">
    <value>Hod</value>
  </data>
  <data name="Section_Title_RECIPIENT" xml:space="preserve">
    <value>Recipient</value>
  </data>
  <data name="Section_Title_TESTER" xml:space="preserve">
    <value>Tester</value>
  </data>
  <data name="Label_LocationAddress" xml:space="preserve">
    <value>Location Address:</value>
  </data>
  <data name="Label_InwardId" xml:space="preserve">
    <value>Inward ID:</value>
  </data>
  <data name="Label_ProjectName" xml:space="preserve">
    <value>Project Name:</value>
  </data>
  <data name="Error_Action" xml:space="preserve">
    <value>Please Select an Action</value>
  </data>
  <data name="Error_AWDNo" xml:space="preserve">
    <value>AWD No is Required</value>
  </data>
  <data name="Error_Comment" xml:space="preserve">
    <value>Comment is Required</value>
  </data>
  <data name="Error_CourierDetails" xml:space="preserve">
    <value>Courier Details is Required</value>
  </data>
  <data name="Error_LocationAddress" xml:space="preserve">
    <value>Location/Address is Required</value>
  </data>
  <data name="Error_Particulars" xml:space="preserve">
    <value>Recipient 1 Particulars is Required</value>
  </data>
  <data name="Error_RecipientName" xml:space="preserve">
    <value>Recipient Name is Required</value>
  </data>
  <data name="Error_TypeofMaterial" xml:space="preserve">
    <value>Please Select Type of Material</value>
  </data>
  <data name="Error_OutwardDate" xml:space="preserve">
    <value>Outward Date is Required</value>
  </data>
  <data name="Label_TesterAttachment" xml:space="preserve">
    <value>Attachment:</value>
  </data>
  <data name="Label_TesterSingleAttachment" xml:space="preserve">
    <value>Attachment:</value>
  </data>
  <data name="Label_Comments" xml:space="preserve">
    <value>Comments :</value>
  </data>
  <data name="Error_TesterAttachment" xml:space="preserve">
    <value>Attachment is required</value>
  </data>
  <data name="Text_SaveDraftSuccess" xml:space="preserve">
    <value>Outward Request Saved as Draft Successfully.</value>
  </data>
  <data name="Text_Success" xml:space="preserve">
    <value>Outward Request is Saved Successfully.</value>
  </data>
  <data name="Label_ProposedBy" xml:space="preserve">
    <value>Outward Details Entered By :</value>
  </data>
  <data name="Label_Status" xml:space="preserve">
    <value>Status :</value>
  </data>
  <data name="Label_RequestDate" xml:space="preserve">
    <value>Request Date :</value>
  </data>
  <data name="Error_InwardId" xml:space="preserve">
    <value>Please Select Inward ID</value>
  </data>
  <data name="Error_ProjectName" xml:space="preserve">
    <value>Please Select Project Name</value>
  </data>
  <data name="Error_RecipientSingleAttachment" xml:space="preserve">
    <value>Recipient Attachment is Required</value>
  </data>
  <data name="Label_RecipientSingleAttachment" xml:space="preserve">
    <value>Recipient Attachment</value>
  </data>
  <data name="Text_HoldSuccess" xml:space="preserve">
    <value>Outward Request is HOLD Successfully.</value>
  </data>
  <data name="Text_CompleteSuccess" xml:space="preserve">
    <value>Outward Request has been Completed Successfully.&lt;br/&gt;&lt;br/&gt;&lt;b&gt;
If you want to print outward request details please click on top of the form's print button.&lt;/b&gt;</value>
  </data>
  <data name="Text_Rework" xml:space="preserve">
    <value>Outward Request has been sent for Rework.</value>
  </data>
  <data name="Text_Error" xml:space="preserve">
    <value>Something went Wrong.</value>
  </data>
  <data name="Label_NextApproverAlias" xml:space="preserve">
    <value>Pending with :</value>
  </data>
  <data name="Label_ProposedByAlise" xml:space="preserve">
    <value>Outward Details Entered By :</value>
  </data>
  <data name="Text_SaveSuccess" xml:space="preserve">
    <value>Outward Request Saved as Draft Successfully.</value>
  </data>
  <data name="Error_HOD" xml:space="preserve">
    <value>Please Select HOD</value>
  </data>
  <data name="Label_HOD" xml:space="preserve">
    <value>HOD :</value>
  </data>
  <data name="Label_Recipient2Particulars" xml:space="preserve">
    <value>Recipient 2 Particulars :</value>
  </data>
  <data name="Error_Recipient2Particulars" xml:space="preserve">
    <value>Recipient 2 Particulars is Required</value>
  </data>
  <data name="Assembled_Particulars" xml:space="preserve">
    <value>Particulars :</value>
  </data>
  <data name="Error_Particulars_Outward" xml:space="preserve">
    <value>Particulars is Required</value>
  </data>
  <data name="Error_MaterialCost" xml:space="preserve">
    <value>Material Cost is Required</value>
  </data>
  <data name="Label_MaterialCost" xml:space="preserve">
    <value>Material Cost :</value>
  </data>
</root>